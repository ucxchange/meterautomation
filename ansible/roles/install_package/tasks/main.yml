---

- name: Lookup installed {{ package }} version
  shell: ls -1 "{{ axeda_home }}/{{ inventory_hostname }}/packages/{{ package }}" || true
  register: installed_package_version_cmd
  ignore_errors: true
  changed_when: installed_package_version_cmd.stdout != version
  tags: common

- name: Locate {{ package }} archive
  shell: ls "{{ axeda_shared }}/software/{{ package }}/{{ version }}"/*
  register: package_archive_cmd
  failed_when: "package_archive_cmd.stdout == ''"
  changed_when: false

- name: Clean old {{ package }} versions
  file: state=absent path={{ axeda_home }}/{{ inventory_hostname }}/packages/{{ package }}/{{ item }}
  with_items: installed_package_version_cmd.stdout_lines
  when: item != version

- name: Create {{ package }} base directory
  file: >
    state=directory
    path={{ axeda_home }}/{{ inventory_hostname }}/packages/{{ package }}/{{ version }}

- name: Extract {{ package }} archive
  unarchive: >
    src={{ package_archive_cmd.stdout }}
    dest={{ axeda_home }}/{{ inventory_hostname }}/packages/{{ package }}/{{ version }}
    copy=no
  when: installed_package_version_cmd | changed

# Set the home variable if one was specified

- name: Get home location for {{ package }}
  shell: ls -d "{{ axeda_home }}/{{ inventory_hostname }}/packages/{{ package }}/{{ version }}"/*
  register: package_home_cmd
  when: home_var is defined
  failed_when: "package_home_cmd.stdout == '' or package_home_cmd.stdout_lines|length > 1"
  changed_when: false
  tags: common

- name: Set home location
  set_fact: "{{ home_var }}={{ package_home_cmd.stdout }}"
  when: home_var is defined
  tags: common
